memberSearchIndex = [{"p":"chess.pieces","c":"Bishop","l":"Bishop(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.board","c":"Board","l":"Board()","u":"%3Cinit%3E()"},{"p":"chess.pieces","c":"Bishop","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.pieces","c":"King","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.pieces","c":"Knight","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.pieces","c":"Pawn","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.pieces","c":"Piece","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.pieces","c":"Queen","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.pieces","c":"Rook","l":"canAttackPosition(Board, Position)","u":"canAttackPosition(chess.board.Board,chess.position.Position)"},{"p":"chess.board","c":"Board","l":"canCastleKingside(boolean)"},{"p":"chess.board","c":"Board","l":"canCastleQueenside(boolean)"},{"p":"chess.board","c":"Board","l":"clear()"},{"p":"chess.utils","c":"Utils","l":"containsPosition(List<Position>, Position)","u":"containsPosition(java.util.List,chess.position.Position)"},{"p":"chess.board","c":"Board","l":"display()"},{"p":"chess.position","c":"Position","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"chess.board","c":"Board","l":"findKing(boolean)"},{"p":"chess.position","c":"Position","l":"fromString(String)","u":"fromString(java.lang.String)"},{"p":"chess.game","c":"Game","l":"Game()","u":"%3Cinit%3E()"},{"p":"chess.position","c":"Position","l":"getCol()"},{"p":"chess.board","c":"Board","l":"getPiece(Position)","u":"getPiece(chess.position.Position)"},{"p":"chess.pieces","c":"Piece","l":"getPosition()"},{"p":"chess.position","c":"Position","l":"getRow()"},{"p":"chess.board","c":"Board","l":"hasAnyValidMoves(boolean)"},{"p":"chess.position","c":"Position","l":"hashCode()"},{"p":"chess.pieces","c":"King","l":"hasMoved()"},{"p":"chess.pieces","c":"Rook","l":"hasMoved()"},{"p":"chess.board","c":"Board","l":"isCheck(boolean)"},{"p":"chess.board","c":"Board","l":"isCheckmate(boolean)"},{"p":"chess.position","c":"Position","l":"isInBounds()"},{"p":"chess.board","c":"Board","l":"isInBounds(Position)","u":"isInBounds(chess.position.Position)"},{"p":"chess.board","c":"Board","l":"isStalemate(boolean)"},{"p":"chess.utils","c":"Utils","l":"isValidPosition(Position)","u":"isValidPosition(chess.position.Position)"},{"p":"chess.pieces","c":"Piece","l":"isWhite()"},{"p":"chess.player","c":"Player","l":"isWhite()"},{"p":"chess.pieces","c":"King","l":"King(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.pieces","c":"Knight","l":"Knight(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.game","c":"Game","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"chess.game","c":"TestChess","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"chess.player","c":"Player","l":"makeMove(Position, Position)","u":"makeMove(chess.position.Position,chess.position.Position)"},{"p":"chess.board","c":"Board","l":"movePiece(Position, Position)","u":"movePiece(chess.position.Position,chess.position.Position)"},{"p":"chess.utils","c":"Utils","l":"parsePosition(String)","u":"parsePosition(java.lang.String)"},{"p":"chess.pieces","c":"Pawn","l":"Pawn(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.pieces","c":"Piece","l":"Piece(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.player","c":"Player","l":"Player(boolean, Board)","u":"%3Cinit%3E(boolean,chess.board.Board)"},{"p":"chess.pieces","c":"Piece","l":"position"},{"p":"chess.position","c":"Position","l":"Position(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"chess.pieces","c":"Bishop","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"King","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"Knight","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"Pawn","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"Piece","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"Queen","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"Rook","l":"possibleMoves(Board)","u":"possibleMoves(chess.board.Board)"},{"p":"chess.pieces","c":"Queen","l":"Queen(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.pieces","c":"Rook","l":"Rook(boolean, Position)","u":"%3Cinit%3E(boolean,chess.position.Position)"},{"p":"chess.position","c":"Position","l":"setCol(int)"},{"p":"chess.pieces","c":"King","l":"setHasMoved(boolean)"},{"p":"chess.pieces","c":"Rook","l":"setHasMoved(boolean)"},{"p":"chess.board","c":"Board","l":"setPiece(Position, Piece)","u":"setPiece(chess.position.Position,chess.pieces.Piece)"},{"p":"chess.pieces","c":"Piece","l":"setPosition(Position)","u":"setPosition(chess.position.Position)"},{"p":"chess.position","c":"Position","l":"setRow(int)"},{"p":"chess.game","c":"Game","l":"start()"},{"p":"chess.game","c":"TestChess","l":"TestChess()","u":"%3Cinit%3E()"},{"p":"chess.pieces","c":"Bishop","l":"toString()"},{"p":"chess.pieces","c":"King","l":"toString()"},{"p":"chess.pieces","c":"Knight","l":"toString()"},{"p":"chess.pieces","c":"Pawn","l":"toString()"},{"p":"chess.pieces","c":"Queen","l":"toString()"},{"p":"chess.pieces","c":"Rook","l":"toString()"},{"p":"chess.position","c":"Position","l":"toString()"},{"p":"chess.utils","c":"Utils","l":"Utils()","u":"%3Cinit%3E()"},{"p":"chess.pieces","c":"Piece","l":"white"},{"p":"chess.board","c":"Board","l":"wouldBeInCheck(Piece, Position)","u":"wouldBeInCheck(chess.pieces.Piece,chess.position.Position)"}];updateSearchResults();